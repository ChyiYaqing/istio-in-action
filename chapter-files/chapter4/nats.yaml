apiVersion: v1
data:
  gnatsd.conf: |-
    # Client port of 4222 on all interfaces
    port: 4222

    # HTTP monitoring port
    monitor_port: 8222

    # This is for clustering multiple servers together.
    cluster {

      # Route connections to be received on any interface on port 6222
      port: 6222

      # Routes are protected, so need to use them with --routes flag
      # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
      authorization {
        user: ruser
        password: T0pS3cr3t
        timeout: 2
      }

      # Routes are actively solicited and connected to from this server.
      # This Docker image has none by default, but you can pass a
      # flag to the gnatsd docker image to create one to an existing server.
      routes = []
    }
kind: ConfigMap
metadata:
  name: nats-conf
---
apiVersion: v1
kind: Service
metadata:
  name: "nats"
  labels:
    app: nats
    system: example
spec:
  selector:
    app: "nats"
  ports:
    - protocol: "TCP"
      port: 4222
      targetPort: 4222
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
  labels:
    app: nats
    system: example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
        system: example
    spec:
      containers:
        - name: nats-container
          image: nats:1.3.0
          imagePullPolicy: Always
          env:
            - name: TCP_PORT
              value: "2701"
          ports:
            - name: nats-port
              containerPort: 4222
          volumeMounts:
          - mountPath: /gnatsd.conf
            subPath: gnatsd.conf
            name: config
      volumes:
        - name: config
          configMap:
            name: nats-conf
